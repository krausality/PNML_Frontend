// Import the theming functions
@use '@angular/material' as mat;

// Import the default color palettes (or define your custom ones)
// This example uses standard palettes - REPLACE with your red theme specifics.
// You'll likely need custom palette definitions for a "TR Red Theme".
// Example custom palette definition:
// $my-red-palette: mat.define-palette((
//   50: #ffebee,
//   100: #ffcdd2,
//   // ... other shades
//   500: #f44336, // Your primary red
//   // ... other shades
//   contrast: (
//     50: rgba(black, 0.87),
//     // ... other contrast colors
//   )
// ));
// $tr-red-primary: mat.define-palette($my-red-palette, 500); // Use 500 as default
// $tr-red-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400); // Example accent
// $tr-red-warn: mat.define-palette(mat.$red-palette); // Example warn


// Using standard palettes as placeholders - **ADAPT THESE**
$tr-red-primary: mat.define-palette(mat.$red-palette, 700, 500, 900); // Example: Strong Red Primary
$tr-red-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400); // Example: Pink Accent
$tr-red-warn: mat.define-palette(mat.$deep-orange-palette); // Example: Deep Orange Warn

// Define the theme using the map-based API
$tr-red-theme: mat.define-light-theme((
  color: (
    primary: $tr-red-primary,
    accent: $tr-red-accent,
    warn: $tr-red-warn,
  ),
  // Optionally configure typography and density
  typography: mat.define-typography-config(),
  density: 0 // Default density scale
));

// Apply the theme to the entire application
@include mat.core(); // Include Angular Material core styles
@include mat.all-component-themes($tr-red-theme);

// --- Add any component-specific theme overrides below ---
// Example:
// @include mat.button-theme($tr-red-theme);
// @include mat.icon-theme($tr-red-theme);
// ... etc. for other components used

// --- Add any custom global styles related to the theme ---
// body {
//   // Custom theme-related styles
// }