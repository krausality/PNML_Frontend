{
    "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
    "version": 1,
    "newProjectRoot": "projects",
    "projects": {
        "fapra-template": {
            "projectType": "application",
            "schematics": {},
            "root": "",
            "sourceRoot": "src",
            "prefix": "app",
            "architect": {
                "build": {
                    "builder": "@angular-devkit/build-angular:browser",
                    "options": {
                        "outputPath": "dist/fapra-template",
                        "index": "src/index.html",
                        "main": "src/main.ts",
                        "polyfills": [
                            "zone.js" // Only zone.js needed here typically for polyfills
                        ],
                        "tsConfig": "tsconfig.app.json",
                        "assets": [
                            "src/favicon.ico",
                            "src/assets",
                            {
                                "glob": "**petri-net.component.css",
                                "input": "src/app/tr-components/petri-net/",
                                "output": "/assets/"
                            }
                        ],
                        "styles": [
                            {
                                "input": "src/tr-red-theme.scss" // Keep the updated theme file reference
                            },
                            "src/styles.css"
                        ],
                        "scripts": [],
                        "allowedCommonJsDependencies": [
                            "ajv/dist/2020",
                            "html2canvas",
                            "fracturedjsonjs",
                            "json-parse-better-errors",
                            "xml-js",
                            "vkbeautify",
                            "sax", // Keep sax listed if it helps ensure it's processed correctly
                            "stream-browserify" // Listing the polyfill itself might help in some edge cases
                        ]
                        // Removed the invalid 'browser' and 'server' keys from here.
                        // The 'resolve.fallback' logic is implicitly handled by installing the polyfill
                        // or potentially via tsconfig paths, not directly configured here without custom builders.
                    },
                    "configurations": {
                        "production": {
                            "budgets": [
                                {
                                    "type": "initial",
                                    "maximumWarning": "500kb",
                                    "maximumError": "1mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "2kb",
                                    "maximumError": "4kb"
                                }
                            ],
                            "outputHashing": "all",
                             // Ensure standard prod settings are correct
                            "aot": true,
                            "extractLicenses": true,
                            "buildOptimizer": true,
                            "sourceMap": false,
                            "optimization": true,
                            "vendorChunk": false // Typically false for prod builds for smaller initial chunks
                        },
                        "development": {
                            "buildOptimizer": false,
                            "optimization": false,
                            "vendorChunk": true,
                            "extractLicenses": false,
                            "sourceMap": true,
                            "namedChunks": true
                        }
                    },
                    "defaultConfiguration": "production"
                },
                "serve": {
                    "builder": "@angular-devkit/build-angular:dev-server",
                    "configurations": {
                        "production": {
                            "browserTarget": "fapra-template:build:production"
                        },
                        "development": {
                            "browserTarget": "fapra-template:build:development"
                        }
                    },
                    "defaultConfiguration": "development"
                    // No specific options needed here usually, inherits or relies on polyfills
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "fapra-template:build"
                    }
                },
                "test": {
                    "builder": "@angular-devkit/build-angular:karma",
                    "options": {
                        "polyfills": [
                            "zone.js",
                            "zone.js/testing"
                            // Remove "stream" from here too, handle via karma.conf.js if needed
                        ],
                        "tsConfig": "tsconfig.spec.json",
                        "assets": [
                            "src/favicon.ico",
                            "src/assets"
                        ],
                        "styles": [
                            // Use the defined theme for consistency
                            {
                                "input": "src/tr-red-theme.scss"
                            },
                            "src/styles.css"
                        ],
                        "scripts": []
                        // If tests fail due to missing 'stream', you'd add the fallback to karma.conf.js webpack config section.
                    }
                }
            }
        }
    },
    "cli": {
        "analytics": false
    }
}